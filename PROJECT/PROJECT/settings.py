"""
Django settings for PROJECT project.

Generated by 'django-admin startproject' using Django 3.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'y(-bq_w^+*67^k3@ef&$r33aab#x9ild)g0@7hc(ztz1^=m-!*'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'rest_framework',  # restframework api plugin
    'oauth2_provider',# oath 2 toolkit plugin

    'rest_framework.authtoken',  ## necessary for django-rest-auth
    'rest_auth',

#'bkash',  # bkash api plugin

    "MySHOP", #MY apps
    'product',
    'rating',
    'review',
    'cart',
    'order',
    'order_unit',
    'unit',
    'users',



    'django.contrib.sites',   ####ALLAUTH APPS
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',



]


######ALLAUTH SIteID requirement
SITE_ID = 1
LOGIN_REDIRECT_URL='/'
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

ACCOUNT_DEFAULT_HTTP_PROTOCOL='http'


##override user model
AUTH_USER_MODEL = 'users.User'

####Settings for ALLAUTH AND CUSTOM USER MODEL
ACCOUNT_USER_MODEL_USERNAME_FIELD = None
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_AUTHENTICATION_METHOD = 'email'




MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',



###################DJANGO OATH2 STUFF LEGACY
#    'django.contrib.sessions.middleware.SessionMiddleware', # This needs to be first
#    'oauth2_provider.middleware.OAuth2TokenMiddleware',
]

######################################################################
# -- Set up DjRestF to use OAuth2
#
#REST_FRAMEWORK = {
#    'DEFAULT_AUTHENTICATION_CLASSES': (
#       'oauth2_provider.contrib.rest_framework.OAuth2Authentication',
#        'rest_framework.authentication.SessionAuthentication', # To keep the Browsable API
#    ),
#    'DEFAULT_PERMISSION_CLASSES': (
#        'rest_framework.permissions.IsAuthenticated',
#    ),
#}
#
# --- Specify the authentication backends
#
#AUTHENTICATION_BACKENDS = (
#    'django.contrib.auth.backends.ModelBackend' # To keep the Browsable API
#    'oauth2_provider.backends.OAuth2Backend',
#)
#


ALLOWED_HOSTS = ['127.0.0.1','localhost','127.0.0.1','0.0.0.0']




#####################################################################










ROOT_URLCONF = 'PROJECT.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'PROJECT.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

#Postgre database setup
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': '299Project',
        'USER': 'postgres',
        'PASSWORD': '3265',
        'HOST': '127.0.0.1',
        'PORT': '5432',
    }
}



########## ALLAUTH BACKEDNS

AUTHENTICATION_BACKENDS = [

    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',

]
########## ALL AUTH get email from google login (email scope enabling)
SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'offline',
        }
    }
}



# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
